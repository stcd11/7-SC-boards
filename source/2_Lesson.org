#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: An introduction to Breadboards
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/7-SC-boards">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Getting stuck in
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- Last lesson you looked at a virtual board, to become familiar with how a breadboard is connected internally.
- We'll now learn how to wire a breadboard so it works, and is neat. 
- Ensure you have the following:
   - Breadboard,
   - Side cutters,
   - Wire stripper,
   - Long-nose pliers,
   - About 15cm of red single-core wire,
   - About 15cm of black single-core wire,
   - 2x LEDs. Any colour, 3mm or 5mm,
   - 2x 330 Ohm resistors,
   - 1x 6x6 PTM switch.
- We'll start with something you're familiar with; the first circuit from the previous lesson.
[[./img/w1_bb6.png]]
- Rather than mess around with PP3 batteries /(is it flat? Have I got it the right way around? Why aren't there enough batteries, etc)/, we'll power or circuit with a plug-in DC power supply that runs on the mains.
- Take a short (e.g. 5cm-ish), and strip around 5mm of insulation from both ends. 
- Use a pair of long-nose pliers to bend one of the stripped ends by 90 degrees. While it's tempting to bend it with your fingers, you won't be able to get the bend as neat. 
[[./img/w2_1.jpg]]
- Put the bent end in the top-right hole, and leave the remaining wire hanging off the end of the board. 
- Repeat this with a piece of black wire, putting it in the very bottom-left corner hole.
- When we want to test our circuit (once its built), we can just attach the red crocodile clip to positive, and the black to negative. 
- By carefully trimming and bending the legs of your resistor, you can fit this flat to the breadboard as per the diagram above.
- Trim the legs of your LED so they have about 7mm protruding (remember that the negative leg of the LED has a flat edge on its body).
- Finally, carefully measure and bend (with long-nose pliers) a piece of black single-core wire to neatly take it to the bottom row. 
[[./img/w2_2.jpg]]
- Power it up!
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- We'll add a PTM switch to the board, so that we've got the same circuit that went into our LED torch at the start of the year. 
- Fetch a 6x6 PTM switch from the component racks, and take a moment to look at it. 
[[./img/w2_3.png]]
- These switches are made by having two hoops of metal side by side, with a gap between them. One of the hoops is emphasised in the picture above. 
- When the button is pushed, a short piece of wire touches both hoops, closing the switch and allowing current to flow from one hoop to the other. 
- Modify your circuit to include the switch, as shown below. The centre of a breadboard is designed to take components like chips and switches. You need to ensure that the switch is the right way around (so that the hoops in the switch run *vertically*). 
[[./img/w2_4.jpg]]
- Connect it to power, and give it a try!
- The diagram below shows the circuit before the PTM is pushed (shown in blue) and the additional connections when the switch pushed (orange).
[[./img/w2_5.jpg]] 
** Badge It - Silver
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Create this circuit on a breadboard, and take a picture of it.
[[./img/w2_6.png]]
** Badge It - Gold
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Create this circuit on a breadboard, and take a picture of it.
[[./img/w2_7.png]]
** Badge It - Platinum
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- This is an advanced form of the door buzzer that removes the need to use a switch. A user can simply touch the two stripped wires shown on the left-hand side of the circuit diagram, and the LED and buzzer will energise. 
[[./img/w2_8.png]]
- It uses a pair of NPN Transistors connected together, which multiplies their effect. This arrangement is called a Darlington Pair. 
- You'll need to look up which leg of the transistor is which online in order to be able to build this. Get your teacher to check it before you turn it on!
